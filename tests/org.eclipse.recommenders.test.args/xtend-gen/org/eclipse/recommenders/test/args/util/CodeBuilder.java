package org.eclipse.recommenders.test.args.util;

import java.util.concurrent.atomic.AtomicInteger;
import org.eclipse.xtend2.lib.StringConcatenation;
import org.eclipse.xtext.xbase.lib.Functions.Function0;

@SuppressWarnings("all")
public class CodeBuilder {
  private static AtomicInteger classCounter = new Function0<AtomicInteger>() {
    public AtomicInteger apply() {
      AtomicInteger _atomicInteger = new AtomicInteger();
      return _atomicInteger;
    }
  }.apply();
  
  public static String classname() {
    int _addAndGet = CodeBuilder.classCounter.addAndGet(1);
    String _plus = ("TestClass" + Integer.valueOf(_addAndGet));
    return _plus;
  }
  
  public static CharSequence classbody(final CharSequence classbody) {
    String _classname = CodeBuilder.classname();
    CharSequence _classbody = CodeBuilder.classbody(_classname, classbody);
    return _classbody;
  }
  
  public static CharSequence classbody(final CharSequence classname, final CharSequence classbody) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("public class ");
    _builder.append(classname, "");
    _builder.append(" ");
    CharSequence _classDeclaration = CodeBuilder.classDeclaration(_builder, classbody);
    return _classDeclaration;
  }
  
  public static CharSequence classDeclaration(final CharSequence declaration, final CharSequence body) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("import org.eclipse.swt.*;");
    _builder.newLine();
    _builder.append("import org.eclipse.swt.browser.*;");
    _builder.newLine();
    _builder.append("import org.eclipse.swt.graphics.*;");
    _builder.newLine();
    _builder.append("import org.eclipse.swt.layout.*;");
    _builder.newLine();
    _builder.append("import org.eclipse.swt.widgets.*;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("import java.io.*;");
    _builder.newLine();
    _builder.append("import java.util.*;");
    _builder.newLine();
    _builder.newLine();
    _builder.append(declaration, "");
    _builder.append(" {");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.append(body, "	");
    _builder.newLineIfNotEmpty();
    _builder.append("}");
    _builder.newLine();
    return _builder;
  }
  
  public static CharSequence testCode() {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("public class BrowserExample");
    StringConcatenation _builder_1 = new StringConcatenation();
    _builder_1.append("static ResourceBundle resourceBundle = ResourceBundle.getBundle(\"examples_browser\");");
    _builder_1.newLine();
    _builder_1.append("int index;");
    _builder_1.newLine();
    _builder_1.append("boolean busy;");
    _builder_1.newLine();
    _builder_1.append("Image images[];");
    _builder_1.newLine();
    _builder_1.append("Image icon = null;");
    _builder_1.newLine();
    _builder_1.append("boolean title = false;");
    _builder_1.newLine();
    _builder_1.append("Composite parent;");
    _builder_1.newLine();
    _builder_1.append("Text locationBar;");
    _builder_1.newLine();
    _builder_1.append("Browser browser;");
    _builder_1.newLine();
    _builder_1.append("ToolBar toolbar;");
    _builder_1.newLine();
    _builder_1.append("Canvas canvas;");
    _builder_1.newLine();
    _builder_1.append("ToolItem itemBack, itemForward;");
    _builder_1.newLine();
    _builder_1.append("Label status;");
    _builder_1.newLine();
    _builder_1.append("ProgressBar progressBar;");
    _builder_1.newLine();
    _builder_1.append("SWTError error = null;");
    _builder_1.newLine();
    _builder_1.newLine();
    _builder_1.append("static final String[] imageLocations = {");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("\"eclipse01.bmp\", \"eclipse02.bmp\", \"eclipse03.bmp\", \"eclipse04.bmp\", \"eclipse05.bmp\",");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("\"eclipse06.bmp\", \"eclipse07.bmp\", \"eclipse08.bmp\", \"eclipse09.bmp\", \"eclipse10.bmp\",");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("\"eclipse11.bmp\", \"eclipse12.bmp\",};");
    _builder_1.newLine();
    _builder_1.append("static final String iconLocation = \"document.gif\";");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.newLine();
    _builder_1.append("/*");
    _builder_1.newLine();
    _builder_1.append(" ");
    _builder_1.append("* Parameters: top is true only when this program starts running.");
    _builder_1.newLine();
    _builder_1.append(" ");
    _builder_1.append("* \t           When a user clicks \"open in another window\" during browsing, the value of top is false");
    _builder_1.newLine();
    _builder_1.append(" ");
    _builder_1.append("*/");
    _builder_1.newLine();
    _builder_1.append("public BrowserExample(Composite parent, boolean top) {");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("this.parent = parent;");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("try {");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("browser = new Browser(parent, SWT.BORDER);");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("} catch (SWTError e) {");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("error = e;");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("/* Browser widget could not be instantiated */");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("parent.setLayout(new FillLayout());");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("Label label = new Label(parent, SWT.CENTER | SWT.WRAP);");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("label.setText(getResourceString(\"BrowserNotCreated\"));");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("parent.layout(true);");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("return;");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("initResources();");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("final Display display = parent.getDisplay();");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("browser.setData(\"org.eclipse.swt.examples.browserexample.BrowserApplication\", this);");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("browser.addOpenWindowListener(new OpenWindowListener() {");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("public void open(WindowEvent event) {");
    _builder_1.newLine();
    _builder_1.append("\t\t\t");
    _builder_1.append("Shell shell = new Shell(display);");
    _builder_1.newLine();
    _builder_1.append("\t\t\t");
    _builder_1.append("if (icon != null) shell.setImage(icon);");
    _builder_1.newLine();
    _builder_1.append("\t\t\t");
    _builder_1.append("shell.setLayout(new FillLayout());");
    _builder_1.newLine();
    _builder_1.append("\t\t\t");
    _builder_1.append("BrowserExample app = new BrowserExample(shell, false);");
    _builder_1.newLine();
    _builder_1.append("\t\t\t");
    _builder_1.append("app.setShellDecoration(icon, true);");
    _builder_1.newLine();
    _builder_1.append("\t\t\t");
    _builder_1.append("event.browser = app.getBrowser();");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("});");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("if (top) {");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("browser.setUrl(getResourceString(\"Startup\"));");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("show(false, null, null, true, true, true, true);");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("} else {");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("browser.addVisibilityWindowListener(new VisibilityWindowListener() {");
    _builder_1.newLine();
    _builder_1.append("\t\t\t");
    _builder_1.append("public void hide(WindowEvent e) {");
    _builder_1.newLine();
    _builder_1.append("\t\t\t");
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.append("\t\t\t");
    _builder_1.append("public void show(WindowEvent e) {");
    _builder_1.newLine();
    _builder_1.append("\t\t\t\t");
    _builder_1.append("Browser browser = (Browser)e.widget;");
    _builder_1.newLine();
    _builder_1.append("\t\t\t\t");
    _builder_1.append("BrowserExample app = (BrowserExample)browser.getData(\"org.eclipse.swt.examples.browserexample.BrowserApplication\");");
    _builder_1.newLine();
    _builder_1.append("\t\t\t\t");
    _builder_1.append("app.show(true, e.location, e.size, e.addressBar, e.menuBar, e.statusBar, e.toolBar);");
    _builder_1.newLine();
    _builder_1.append("\t\t\t");
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("});");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("browser.addCloseWindowListener(new CloseWindowListener() {");
    _builder_1.newLine();
    _builder_1.append("\t\t\t");
    _builder_1.append("public void close(WindowEvent event) {");
    _builder_1.newLine();
    _builder_1.append("\t\t\t\t");
    _builder_1.append("Browser browser = (Browser)event.widget;");
    _builder_1.newLine();
    _builder_1.append("\t\t\t\t");
    _builder_1.append("Shell shell = browser.getShell();");
    _builder_1.newLine();
    _builder_1.append("\t\t\t\t");
    _builder_1.append("shell.close();");
    _builder_1.newLine();
    _builder_1.append("\t\t\t");
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("});");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.newLine();
    _builder_1.append("/**");
    _builder_1.newLine();
    _builder_1.append(" ");
    _builder_1.append("* Disposes of all resources associated with a particular");
    _builder_1.newLine();
    _builder_1.append(" ");
    _builder_1.append("* instance of the BrowserApplication.");
    _builder_1.newLine();
    _builder_1.append(" ");
    _builder_1.append("*/\t");
    _builder_1.newLine();
    _builder_1.append("public void dispose() {");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("freeResources();");
    _builder_1.newLine();
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.newLine();
    _builder_1.append("/**");
    _builder_1.newLine();
    _builder_1.append(" ");
    _builder_1.append("* Gets a string from the resource bundle.");
    _builder_1.newLine();
    _builder_1.append(" ");
    _builder_1.append("* We don\'t want to crash because of a missing String.");
    _builder_1.newLine();
    _builder_1.append(" ");
    _builder_1.append("* Returns the key if not found.");
    _builder_1.newLine();
    _builder_1.append(" ");
    _builder_1.append("*/");
    _builder_1.newLine();
    _builder_1.append("public String getResourceString(String key) {");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("try {");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("return resourceBundle.getString(key);");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("} catch (MissingResourceException e) {");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("return key;");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("} catch (NullPointerException e) {");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("return \"!\" + key + \"!\";");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("}\t\t\t");
    _builder_1.newLine();
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.newLine();
    _builder_1.append("public SWTError getError() { return error; }");
    _builder_1.newLine();
    _builder_1.newLine();
    _builder_1.append("public Browser getBrowser() { return browser; }");
    _builder_1.newLine();
    _builder_1.newLine();
    _builder_1.append("public void setShellDecoration(Image icon, boolean title) {");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("this.icon = icon;");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("this.title = title;");
    _builder_1.newLine();
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.newLine();
    _builder_1.append("void show(boolean owned, Point location, Point size, boolean addressBar, boolean menuBar, boolean statusBar, boolean toolBar) {");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("final Shell shell = browser.getShell();");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("if (owned) {");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("if (location != null) shell.setLocation(location);");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("if (size != null) shell.setSize(shell.computeSize(size.x, size.y));");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("shell.setSize(shell.computeSize(size.x, size.y));");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("FormData data = null;");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("if (toolBar) {");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("toolbar = new ToolBar(parent, SWT.NONE);");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("data = new FormData();");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("data.top = new FormAttachment(0, 5);");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("toolbar.setLayoutData(data);");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("itemBack = new ToolItem(toolbar, SWT.PUSH);");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("itemBack.setText(this.getResourceString(\"Back\"));");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("itemForward = new ToolItem(toolbar, SWT.PUSH);");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("itemForward.setText(this.getResourceString(\"Forward\"));");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("itemBack.setEnabled(browser.isBackEnabled());");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("itemForward.setEnabled(browser.isForwardEnabled());");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("Listener listener = new Listener() {");
    _builder_1.newLine();
    _builder_1.append("\t\t\t");
    _builder_1.append("public void handleEvent(Event event){");
    _builder_1.newLine();
    _builder_1.append("\t\t\t\t");
    _builder_1.append("ToolItem item = (ToolItem) event.widget;");
    _builder_1.newLine();
    _builder_1.append("\t\t\t\t");
    _builder_1.append("if(item == itemBack) browser.back();");
    _builder_1.newLine();
    _builder_1.append("\t\t\t\t");
    _builder_1.append("else if(item == itemForward) browser.forward();");
    _builder_1.newLine();
    _builder_1.append("\t\t\t");
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("};");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("itemBack.addListener(SWT.Selection, listener);");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("itemForward.addListener(SWT.Selection, listener);");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("canvas = new Canvas(parent, SWT.NO_BACKGROUND);");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("data = new FormData();");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("data.width = 24;");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("data.height = 24;");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("data.top = new FormAttachment(0, 5);");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("data.right = new FormAttachment(100, -5);");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("canvas.setLayoutData(data);");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("canvas.addListener(SWT.Paint, new Listener() {");
    _builder_1.newLine();
    _builder_1.append("\t\t\t");
    _builder_1.append("public void handleEvent(Event e) {");
    _builder_1.newLine();
    _builder_1.append("\t\t\t\t");
    _builder_1.append("Rectangle rect = images[0].getBounds();");
    _builder_1.newLine();
    _builder_1.append("\t\t\t\t");
    _builder_1.append("Point pt = ((Canvas)e.widget).getSize();");
    _builder_1.newLine();
    _builder_1.append("\t\t\t\t");
    _builder_1.append("//e.gc.drawImage(images[index], 0, 0, rect.width, rect.height, 0, 0, pt.x, pt.y);");
    _builder_1.newLine();
    _builder_1.append("\t\t\t\t");
    _builder_1.newLine();
    _builder_1.append("\t\t\t\t");
    _builder_1.append("e.gc.drawImage(images[index], 0, 0, rect.width, rect.height, 0, 0, pt.x, pt.y);");
    _builder_1.newLine();
    _builder_1.append("\t\t\t");
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("});");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("canvas.addListener(SWT.MouseDown, new Listener() {");
    _builder_1.newLine();
    _builder_1.append("\t\t\t");
    _builder_1.append("public void handleEvent(Event e) {");
    _builder_1.newLine();
    _builder_1.append("\t\t\t\t");
    _builder_1.append("browser.setUrl(getResourceString(\"Startup\"));");
    _builder_1.newLine();
    _builder_1.append("\t\t\t");
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("}); ");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("final Display display = parent.getDisplay();");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("display.asyncExec(new Runnable() {");
    _builder_1.newLine();
    _builder_1.append("\t\t\t");
    _builder_1.append("public void run() {");
    _builder_1.newLine();
    _builder_1.append("\t\t\t\t");
    _builder_1.append("if (canvas.isDisposed()) return;");
    _builder_1.newLine();
    _builder_1.append("\t\t\t\t");
    _builder_1.append("if (busy) {");
    _builder_1.newLine();
    _builder_1.append("\t\t\t\t\t");
    _builder_1.append("index++;");
    _builder_1.newLine();
    _builder_1.append("\t\t\t\t\t");
    _builder_1.append("if (index == images.length) index = 0;");
    _builder_1.newLine();
    _builder_1.append("\t\t\t\t\t");
    _builder_1.append("canvas.redraw();");
    _builder_1.newLine();
    _builder_1.append("\t\t\t\t");
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.append("\t\t\t\t");
    _builder_1.append("display.timerExec(150, this);");
    _builder_1.newLine();
    _builder_1.append("\t\t\t");
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("});");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("if (addressBar) {");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("locationBar = new Text(parent, SWT.BORDER);");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("data = new FormData();");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("if (toolbar != null) {");
    _builder_1.newLine();
    _builder_1.append("\t\t\t");
    _builder_1.append("data.top = new FormAttachment(toolbar, 0, SWT.TOP);");
    _builder_1.newLine();
    _builder_1.append("\t\t\t");
    _builder_1.append("data.left = new FormAttachment(toolbar, 5, SWT.RIGHT);");
    _builder_1.newLine();
    _builder_1.append("\t\t\t");
    _builder_1.append("data.right = new FormAttachment(canvas, -5, SWT.DEFAULT);\t\t\t");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("} else {");
    _builder_1.newLine();
    _builder_1.append("\t\t\t");
    _builder_1.append("data.top = new FormAttachment(0, 0);");
    _builder_1.newLine();
    _builder_1.append("\t\t\t");
    _builder_1.append("data.left = new FormAttachment(0, 0);");
    _builder_1.newLine();
    _builder_1.append("\t\t\t");
    _builder_1.append("data.right = new FormAttachment(100, 0);\t\t\t");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("locationBar.setLayoutData(data);");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("locationBar.addListener(SWT.DefaultSelection, new Listener() {");
    _builder_1.newLine();
    _builder_1.append("\t\t\t");
    _builder_1.append("public void handleEvent(Event e) {");
    _builder_1.newLine();
    _builder_1.append("\t\t\t\t");
    _builder_1.append("browser.setUrl(locationBar.getText());");
    _builder_1.newLine();
    _builder_1.append("\t\t\t");
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("});");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("if (statusBar) {");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("status = new Label(parent, SWT.NONE);");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("progressBar = new ProgressBar(parent, SWT.NONE);");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("data = new FormData();");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("data.left = new FormAttachment(0, 5);");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("data.right = new FormAttachment(progressBar, 0, SWT.DEFAULT);");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("data.bottom = new FormAttachment(100, -5);");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("status.setLayoutData(data);");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("data = new FormData();");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("data.right = new FormAttachment(100, -5);");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("data.bottom = new FormAttachment(100, -5);");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("progressBar.setLayoutData(data);");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("/*");
    _builder_1.newLine();
    _builder_1.append("\t\t ");
    _builder_1.append("* Here, please add a listener to the browser, so that the status bar ");
    _builder_1.newLine();
    _builder_1.append("\t\t ");
    _builder_1.append("* can update the status when loading files (status is a label)");
    _builder_1.newLine();
    _builder_1.append("\t\t ");
    _builder_1.append("* you may use these functions, addStatusTextListener and setText");
    _builder_1.newLine();
    _builder_1.append("\t\t ");
    _builder_1.append("*/");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("browser.addStatusTextListener(new StatusTextListener() {");
    _builder_1.newLine();
    _builder_1.append("\t\t\t");
    _builder_1.append("public void changed(StatusTextEvent event) {");
    _builder_1.newLine();
    _builder_1.append("\t\t\t\t");
    _builder_1.append("status.setText(event.text);\t");
    _builder_1.newLine();
    _builder_1.append("\t\t\t");
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("});");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("parent.setLayout(new FormLayout());");
    _builder_1.newLine();
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("Control aboveBrowser = toolBar ? (Control)canvas : (addressBar ? (Control)locationBar : null);");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("data = new FormData();");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("data.left = new FormAttachment(0, 0);");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("data.top = aboveBrowser != null ? new FormAttachment(aboveBrowser, 5, SWT.DEFAULT) : new FormAttachment(0, 0);");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("data.right = new FormAttachment(100, 0);");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("data.bottom = status != null ? new FormAttachment(status, -5, SWT.DEFAULT) : new FormAttachment(100, 0);");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("browser.setLayoutData(data);");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("if (statusBar || toolBar) {");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("browser.addProgressListener(new ProgressListener() {");
    _builder_1.newLine();
    _builder_1.append("\t\t\t");
    _builder_1.append("public void changed(ProgressEvent event) {");
    _builder_1.newLine();
    _builder_1.append("\t\t\t\t");
    _builder_1.append("if (event.total == 0) return;                            ");
    _builder_1.newLine();
    _builder_1.append("\t\t\t\t");
    _builder_1.append("int ratio = event.current * 100 / event.total;");
    _builder_1.newLine();
    _builder_1.append("\t\t\t\t");
    _builder_1.append("if (progressBar != null) progressBar.setSelection(ratio);");
    _builder_1.newLine();
    _builder_1.append("\t\t\t\t");
    _builder_1.append("busy = event.current != event.total;");
    _builder_1.newLine();
    _builder_1.append("\t\t\t\t");
    _builder_1.append("if (!busy) {");
    _builder_1.newLine();
    _builder_1.append("\t\t\t\t\t");
    _builder_1.append("index = 0;");
    _builder_1.newLine();
    _builder_1.append("\t\t\t\t\t");
    _builder_1.append("if (canvas != null) canvas.redraw();");
    _builder_1.newLine();
    _builder_1.append("\t\t\t\t");
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.append("\t\t\t");
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.append("\t\t\t");
    _builder_1.append("public void completed(ProgressEvent event) {");
    _builder_1.newLine();
    _builder_1.append("\t\t\t\t");
    _builder_1.append("if (progressBar != null) progressBar.setSelection(0);");
    _builder_1.newLine();
    _builder_1.append("\t\t\t\t");
    _builder_1.append("busy = false;");
    _builder_1.newLine();
    _builder_1.append("\t\t\t\t");
    _builder_1.append("index = 0;");
    _builder_1.newLine();
    _builder_1.append("\t\t\t\t");
    _builder_1.append("if (canvas != null) {");
    _builder_1.newLine();
    _builder_1.append("\t\t\t\t\t");
    _builder_1.append("itemBack.setEnabled(browser.isBackEnabled());");
    _builder_1.newLine();
    _builder_1.append("\t\t\t\t\t");
    _builder_1.append("itemForward.setEnabled(browser.isForwardEnabled());");
    _builder_1.newLine();
    _builder_1.append("\t\t\t\t\t");
    _builder_1.append("canvas.redraw();");
    _builder_1.newLine();
    _builder_1.append("\t\t\t\t");
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.append("\t\t\t");
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("});");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("if (addressBar || statusBar || toolBar) {");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("browser.addLocationListener(new LocationListener() {");
    _builder_1.newLine();
    _builder_1.append("\t\t\t");
    _builder_1.append("public void changed(LocationEvent event) {");
    _builder_1.newLine();
    _builder_1.append("\t\t\t\t");
    _builder_1.append("busy = true;");
    _builder_1.newLine();
    _builder_1.append("\t\t\t\t");
    _builder_1.append("if (event.top && locationBar != null) locationBar.setText(event.location);");
    _builder_1.newLine();
    _builder_1.append("\t\t\t");
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.append("\t\t\t");
    _builder_1.append("public void changing(LocationEvent event) {");
    _builder_1.newLine();
    _builder_1.append("\t\t\t");
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("});");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("if (title) {");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("browser.addTitleListener(new TitleListener() {");
    _builder_1.newLine();
    _builder_1.append("\t\t\t");
    _builder_1.append("public void changed(TitleEvent event) {");
    _builder_1.newLine();
    _builder_1.append("\t\t\t\t");
    _builder_1.append("shell.setText(event.title+\" - \"+getResourceString(\"window.title\"));");
    _builder_1.newLine();
    _builder_1.append("\t\t\t");
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("});");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("parent.layout(true);");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("if (owned) shell.open();");
    _builder_1.newLine();
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.newLine();
    _builder_1.append("/**");
    _builder_1.newLine();
    _builder_1.append(" ");
    _builder_1.append("* Grabs input focus");
    _builder_1.newLine();
    _builder_1.append(" ");
    _builder_1.append("*/");
    _builder_1.newLine();
    _builder_1.append("public void focus() {");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("if (locationBar != null) locationBar.setFocus();");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("else if (browser != null) browser.setFocus();");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("else parent.setFocus();");
    _builder_1.newLine();
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.newLine();
    _builder_1.append("/**");
    _builder_1.newLine();
    _builder_1.append(" ");
    _builder_1.append("* Frees the resources");
    _builder_1.newLine();
    _builder_1.append(" ");
    _builder_1.append("*/");
    _builder_1.newLine();
    _builder_1.append("void freeResources() {");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("if (images != null) {");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("for (int i = 0; i < images.length; ++i) {");
    _builder_1.newLine();
    _builder_1.append("\t\t\t");
    _builder_1.append("final Image image = images[i];");
    _builder_1.newLine();
    _builder_1.append("\t\t\t");
    _builder_1.append("if (image != null) image.dispose();");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("images = null;");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.newLine();
    _builder_1.append("/**");
    _builder_1.newLine();
    _builder_1.append(" ");
    _builder_1.append("* Loads the resources");
    _builder_1.newLine();
    _builder_1.append(" ");
    _builder_1.append("*/");
    _builder_1.newLine();
    _builder_1.append("void initResources() {");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("final Class clazz = this.getClass();");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("if (resourceBundle != null) {");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("try {");
    _builder_1.newLine();
    _builder_1.append("\t\t\t");
    _builder_1.append("if (images == null) {");
    _builder_1.newLine();
    _builder_1.append("\t\t\t\t");
    _builder_1.append("images = new Image[imageLocations.length];");
    _builder_1.newLine();
    _builder_1.append("\t\t\t\t");
    _builder_1.append("for (int i = 0; i < imageLocations.length; ++i) {");
    _builder_1.newLine();
    _builder_1.append("\t\t\t\t\t");
    _builder_1.append("InputStream sourceStream = clazz.getResourceAsStream(imageLocations[i]);");
    _builder_1.newLine();
    _builder_1.append("\t\t\t\t\t");
    _builder_1.append("ImageData source = new ImageData(sourceStream);");
    _builder_1.newLine();
    _builder_1.append("\t\t\t\t\t");
    _builder_1.append("ImageData mask = source.getTransparencyMask();");
    _builder_1.newLine();
    _builder_1.append("\t\t\t\t\t");
    _builder_1.append("images[i] = new Image(null, source, mask);");
    _builder_1.newLine();
    _builder_1.append("\t\t\t\t\t");
    _builder_1.append("try {");
    _builder_1.newLine();
    _builder_1.append("\t\t\t\t\t\t");
    _builder_1.append("sourceStream.close();");
    _builder_1.newLine();
    _builder_1.append("\t\t\t\t\t");
    _builder_1.append("} catch (IOException e) {");
    _builder_1.newLine();
    _builder_1.append("\t\t\t\t\t\t");
    _builder_1.append("e.printStackTrace ();");
    _builder_1.newLine();
    _builder_1.append("\t\t\t\t\t");
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.append("\t\t\t\t");
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.append("\t\t\t");
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.append("\t\t\t");
    _builder_1.append("return;");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("} catch (Throwable t) {");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("String error = (resourceBundle != null) ? getResourceString(\"error.CouldNotLoadResources\") : \"Unable to load resources\";");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("freeResources();");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("throw new RuntimeException(error);");
    _builder_1.newLine();
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.newLine();
    _builder_1.append("public static void main(String [] args) {");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("Display display = new Display();");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("Shell shell = new Shell(display);");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("shell.setLayout(new FillLayout());");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("shell.setText(\"SWT Browser\");");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("InputStream stream = BrowserExample.class.getResourceAsStream(iconLocation);");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("Image icon = new Image(display, stream);");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("shell.setImage(icon);");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("try {");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("stream.close();");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("} catch (IOException e) {");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("e.printStackTrace();");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("BrowserExample app = new BrowserExample(shell, true);");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("app.setShellDecoration(icon, true);");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("shell.open();");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("while (!shell.isDisposed()) {");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("if (!display.readAndDispatch())");
    _builder_1.newLine();
    _builder_1.append("\t\t\t");
    _builder_1.append("display.sleep();");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("icon.dispose();");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("app.dispose();");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("display.dispose();");
    _builder_1.newLine();
    _builder_1.append("}");
    _builder_1.newLine();
    CharSequence _classDeclaration = CodeBuilder.classDeclaration(_builder, _builder_1);
    return _classDeclaration;
  }
}
